{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","quotes","setQuotes","randomQuotes","setrandomQuotes","a","fetch","response","json","data","randIndex","Math","floor","random","length","useEffect","fetchQuote","id","className","text","author","href","encodeURI","class","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QA2DeA,MAxDf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAFa,4CAIb,gCAAAC,EAAA,sEACyBC,MAAM,+BAD/B,cACQC,EADR,gBAEqBA,EAASC,OAF9B,OAEQC,EAFR,OAGEP,EAAUO,GACNC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAChDV,EAAgBK,EAAKC,IALvB,4CAJa,sBAqBb,OATAK,qBAAU,YAZG,mCAaXC,KACC,IAQD,qBAAKC,GAAG,YAAR,SACE,sBAAKC,UAAU,aAAf,UACE,8BACGf,EACC,qCACE,qBAAIc,GAAG,OAAP,cAAqBd,EAAagB,KAAlC,OACA,oBAAGF,GAAG,SAAN,gBAAmBd,EAAaiB,aAGlC,8CAGJ,sBAAKF,UAAU,eAAf,UACE,mBAAGD,GAAG,cACJI,KAAMC,UAAU,yCAAD,OAC4BnB,EAAagB,KADzC,6BADjB,SAKE,mBAAGI,MAAM,qBAEX,mBACEF,KAAMC,UAAU,wEAAD,OAC2DnB,EAAagB,KADxE,6BADjB,SAKE,mBAAGI,MAAM,2BAEX,wBAAQN,GAAG,YAAYO,QAjCV,WACnB,IAAId,EAAYC,KAAKC,MAAMD,KAAKE,SAAWZ,EAAOa,QAClDV,EAAgBH,EAAOS,KA+BjB,gCCxCKe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c06af735.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n  const [randomQuotes, setrandomQuotes] = useState([]);\n\n  async function fetchQuote() {\n    const response = await fetch(\"https://type.fit/api/quotes\");\n    const data = await response.json();\n    setQuotes(data);\n    let randIndex = Math.floor(Math.random() * data.length);\n    setrandomQuotes(data[randIndex]);\n  }\n\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  const getNewQuotes = () => {\n    let randIndex = Math.floor(Math.random() * quotes.length);\n    setrandomQuotes(quotes[randIndex]);\n  };\n\n  return (\n    <div id=\"quote-box\">\n      <div className=\"quote-item\" >\n        <div>\n          {randomQuotes ? (\n            <>\n              <h2 id=\"text\">&quot;{randomQuotes.text}&quot;</h2>\n              <p id=\"author\">-- {randomQuotes.author}</p>\n            </>\n          ) : (\n            <h2>Loading...</h2>\n          )}\n        </div>\n        <div className=\"quote-button\">\n          <a id=\"tweet-quote\"\n            href={encodeURI(\n              `https://twitter.com/intent/tweet?text=${randomQuotes.text}&hashtags=thewebdevcoach`\n            )}\n          >\n            <i class=\"fab fa-twitter\"></i>\n          </a>\n          <a\n            href={encodeURI(\n              `https://tumblr.com/widgets/share/tool?posttype=quote&tag=quotes,text=${randomQuotes.text}&hashtags=thewebdevcoach`\n            )}\n          >\n            <i class=\"fab fa-tumblr-square\"></i>\n          </a>\n          <button id=\"new-quote\" onClick={getNewQuotes}>New Quote</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}